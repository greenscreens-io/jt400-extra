/*
 * Copyright (C) 2015, 2020  Green Screens Ltd.
 * 
 * https://www.greenscreens.io
 * 
 */
package io.greenscreens.jt400.example;

import java.nio.ByteBuffer;
import com.ibm.as400.access.AS400;

import io.greenscreens.jt400.ERRC0100;
import io.greenscreens.jt400.JT400ExtFactory;
import io.greenscreens.jt400.JT400ExtUtil;
import io.greenscreens.jt400.programs.qsys.qdcrdevd.DEVD0100;
import io.greenscreens.jt400.programs.qsys.qdcrdevd.DEVD0600;
import io.greenscreens.jt400.programs.qsys.qdcrdevd.DEVD1100;
import io.greenscreens.jt400.programs.qsys.qdcrdevd.IQDCRDEVD;
import io.greenscreens.jt400.programs.qsys.qdcrdevd.QDCRDEVD;
import io.greenscreens.jt400.programs.qsys.qtocnetsts.IQTOCNETSTS;
import io.greenscreens.jt400.programs.qsys.qtocnetsts.QTOCNETSTS;
import io.greenscreens.jt400.programs.qsys.qtocnetsts.TCPA0100;
import io.greenscreens.jt400.programs.qsys.qtocnetsts.TCPA0200;
import io.greenscreens.jt400.programs.qsys.qzcaclt.IQZCACLT;
import io.greenscreens.jt400.programs.qsys.qzcaclt.QZCACLT;

public class Test {

	static byte [] DEVD600 = {0, 0, 4, 100, 0, 0, 4, 100, -15, -14, -16, -16, -8, -16, -12, -15, -8, -16, -12, -16, -10, -40, -41, -63, -60, -15, -9, -11, -10, -15, -11, 92, -60, -30, -41, 64, 64, 64, 64, 64, 64, 92, -43, -42, 64, 64, 64, 64, 64, 64, 64, -60, -123, -91, -119, -125, -123, 64, -125, -103, -123, -127, -93, -123, -124, 64, -122, -106, -103, 64, -41, -28, -62, -12, -16, -16, 75, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 0, 0, 0, 0, 0, 3, -83, 0, 0, 1, -88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 92, -27, -39, -29, 64, 64, 64, 64, 64, 64, -13, -12, -9, -9, 64, 64, 64, 64, 64, 64, -58, -61, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, -40, -27, -55, -39, -61, -60, -16, -16, -16, -14, -43, -61, -62, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 92, -24, -59, -30, 64, 64, 64, 64, 64, 64, 92, -30, -24, -30, -27, -63, -45, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 92, -60, -59, -27, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, -40, -30, -24, -30, -41, -39, -29, 64, 64, 64, 92, -45, -55, -62, -45, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, -13, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 0, 0, 0, 0, 0, 0, 0, 92, -43, -42, -43, -59, 64, 64, 64, 64, 64, 2, -2, 40, 93, -114, 57, 60, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, -7, -13, 75, -15, -12, -14, 75, -11, -9, 75, -10, -16, 64, 64, 64, -40, -41, -63, -60, -15, -9, -11, -10, -15, -11, -29, -42, -44, -55, -30, -45, -63, -27, 64, 64, -12, -10, -16, -14, -14, -7, -40, -30, -24, -30, -42, -41, -39, 64, 64, 64, -40, -30, -24, -30, 64, 64, 64, 64, 64, 64, 2, 0, 23, -71, 113, 5, -122, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, -15, -8, -11, 75, -15, -15, -13, 75, -11, 75, -15, -13, -12, 64, 64, -15, -14, -16, -16, -8, -16, -12, 92, -55, -41, -27, -12, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 92, -55, -41, -27, -12, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 92, -55, -41, -27, -12, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 92, -55, -41, -27, -12, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
	static byte [] DEVD100 = {0, 0, 0, 104, 0, 0, 0, 104, -15, -14, -16, -16, -8, -16, -12, -15, -8, -12, -9, -13, -12, -40, -41, -63, -60, -15, -8, -12, -10, -11, -16, 92, -60, -30, -41, 64, 64, 64, 64, 64, 64, 92, -43, -42, 64, 64, 64, 64, 64, 64, 64, -60, -123, -91, -119, -125, -123, 64, -125, -103, -123, -127, -93, -123, -124, 64, -122, -106, -103, 64, -41, -28, -62, -12, -16, -16, 75, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 0, 0, 0};
	static String DEVD1100Hex
	static String TCPA0200Hex = "0000010400000104000000010000008EF2F0F2F0F0F8F1F6F0F8F3F3F3F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0D8E2E3D9E3C3D7404040D8D7C7D4D94040404040F5F6F9F4F9F6002400010034A700A4FF9457831940010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008C000000780000000000000000000000010000000100000001000000010000000A000000400000007800020000000200000000000F000000010000000A000000020000006400000001000000010000000200000078000000050000000A000003E800000003000000010000012C0000000A000000010000000000000000000000000000000000";
	
	static final AS400 as400 = new AS400("127.0.0.1", "QSECOFR", "QSECOFR");

	public static void main(String[] args) throws Exception {
		testFormat1();
		// testFormat();
		// testParams();
		// main0();
		// main1();
		// main2();
		// main3();
		// main4();
		
		 // main5();
	}

	public static void testFormat1() throws Exception {

		byte [] data = JT400ExtUtil.hexToBytes(TCPA0200Hex);
		final TCPA0200 result = JT400ExtFactory.build(as400, TCPA0200.class, ByteBuffer.wrap(data));
		System.out.println(result);
	}
	
	/**
	 * Convert received data format bytes into Java Class structure instance
	 * @throws Exception
	 */
	public static void testFormat() throws Exception {

		byte [] data = JT400ExtUtil.hexToBytes(DEVD1100Hex);
		final DEVD1100 result1100 = JT400ExtFactory.build(as400, DEVD1100.class, ByteBuffer.wrap(data));
		System.out.println(result1100);

		data = JT400ExtUtil.hexToBytes(TCPA0200Hex);
		final TCPA0200 result = JT400ExtFactory.build(as400, TCPA0200.class, ByteBuffer.wrap(data));
		System.out.println(result);
		
		final DEVD0100 result100 = JT400ExtFactory.build(as400, DEVD0100.class, ByteBuffer.wrap(DEVD100));
		System.out.println(result100);
		
		final DEVD0600 result600 = JT400ExtFactory.build(as400, DEVD0600.class, ByteBuffer.wrap(DEVD600));
		System.out.println(result600);
		
	}
	
	/**
	 * Convert Java structure parameters into JT400 program call
	 * @throws Exception
	 */
	public static void testParams() throws Exception {
			
		final int len = JT400ExtUtil.getFormatLength(DEVD0100.class);
		
		final QDCRDEVD params = QDCRDEVD.builder()
				.withReceiver(ByteBuffer.allocate(len))
				.withLength(len)
				.withFormatName("DEVD0100")
				.withDeviceName("QPADEV0001")
				.build();
		
		JT400ExtFactory.build(as400, params);
		
	}

	public static void main5() throws Exception {
		
		int len = 1024;
		final IQTOCNETSTS program = IQTOCNETSTS.create(as400);
		final QTOCNETSTS params = QTOCNETSTS.builder()
		.withReceiver(ByteBuffer.allocate(len))
		.withLength(len)
		.withFormat("TCPA0200")
		.withErrorCode(ByteBuffer.allocate(0))
		.build();
		
		program.call(params);
		
		System.out.println(JT400ExtUtil.bytesToHex(params.getReceiver()));

	}
	
	/**
	 * Test service program call
	 * 
	 * @throws Exception
	 */
	public static void main4() throws Exception {
		
		final IQTOCNETSTS program = IQTOCNETSTS.create(as400);
		final QTOCNETSTS params = QTOCNETSTS.build(TCPA0100.class);
		final TCPA0100 result = program.call(params, TCPA0100.class);
		
		System.out.println(result);

	}

	/**
	 * Test servcie call with error structure response
	 * @throws Exception
	 */
	public static void main3() throws Exception {
		
		final IQZCACLT program = IQZCACLT.create(as400);

		// if no error output buffer, throws exception if call not successful
		// final QZCACLT params = QZCACLT.build("TEST", 0);
		final QZCACLT params = QZCACLT.build("TEST\0", 1024);
		program.call(params);
		
		// if service call has a return value  
		// System.out.println(params.getRetVal());

		final ERRC0100 err = JT400ExtFactory.build(as400, ERRC0100.class, params.getErrorCode());
		System.out.println(err);
		System.out.println(params.getClientHandle());
	}

	/**
	 * Error output, without thrown exception
	 * @throws Exception
	 */
	public static void main2() throws Exception {

		final int maxSize = 2048;
		
		final IQDCRDEVD program = IQDCRDEVD.create(as400);
		
		final ByteBuffer errBuff = ERRC0100.toBuffer(1024);
		final QDCRDEVD params = QDCRDEVD.builder()
				.withReceiver(ByteBuffer.allocate(maxSize))
				.withLength(maxSize)
				.withFormatName("DEVD1100")
				.withDeviceName("TESTPRT")
				.withErrorCode(errBuff)
				.build();
		
		final DEVD1100 result1 = program.call(params, DEVD1100.class);

		final ERRC0100 err = JT400ExtFactory.build(as400, ERRC0100.class, params.getErrorCode());
		System.out.println(err);
		
		System.out.println(result1);
		
	}	
	

	/**
	 * Test manual parameters call
	 * @throws Exception
	 */
	public static void main1() throws Exception {

		final int maxSize = 2048;
		
		final IQDCRDEVD program = IQDCRDEVD.create(as400);
		
		final QDCRDEVD params = QDCRDEVD.builder()
				.withReceiver(ByteBuffer.allocate(maxSize))
				.withLength(maxSize)
				.withFormatName("DEVD1100")
				.withDeviceName("HPAS400PRT")
				.withErrorCode(ByteBuffer.allocate(16))
				.build();
		
		final DEVD1100 result1 = program.call(params, DEVD1100.class);

		System.out.println(result1);
		
	}	
	
	/**
	 * Test whole call, display name must be active workstation session
	 * @throws Exception
	 */
	public static void main0() throws Exception {

		final IQDCRDEVD program = IQDCRDEVD.create(as400);
		final QDCRDEVD params = QDCRDEVD.build(DEVD0100.class, "QPADEV0001");
		final DEVD0100 res = program.call(params, DEVD0100.class);
		
		System.out.println(res);
		
	}	

}
